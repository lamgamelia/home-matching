scalar GraphQLDate

type Gallery{
    _id: ID
    id: Int!
    title: String!
    designerID:Int
    company: String!
    propertyType: String!
    propertySize: Int!
    designStyle1: String!
    designStyle2: String!
    noOfBedrooms: Int! 
    datetime: GraphQLDate!
    image: String
}

type Message{
    _id: ID
    id: Int!
    name: String!
    email: String!
    subject: String!
    message: String
    datetime: GraphQLDate!
}

type Review{
    _id: ID
    id: Int!
    name: String!
    email: String!
    designer: String!
    rating: Int!
    reviewMessage: String
    reviewImage: String
    datetime: GraphQLDate!
}

type Designer{
    _id: ID
    id: Int!
    username: String
    title: String!
    email: String!
    mobile: String!
    designStyle: [String!]
    propertyCondition: [String!]
    feeLevel: Int!
    propertyType: [String!]
    description: String!
}

input InputMessage {
    name: String!
    email: String!
    subject: String!
    message: String
    datetime: GraphQLDate!
}

input InputReview {
    name: String!
    email: String!
    designer: String
    rating: Int
    reviewMessage: String
    reviewImage: String
}

input InputGallery {
    title: String!
    designerID:Int
    company: String!
    propertyType: String!
    propertySize: Int!
    designStyle1: String!
    designStyle2: String!
    noOfBedrooms: Int! 
    image: String
}

input InputDesigner{
    title: String!
    username: String
    email: String!
    mobile: String!
    designStyle: [String!]    
    propertyCondition: [String!]
    feeLevel: Int!
    propertyType: [String!]
    description: String!
}

type User{
    id: ID!
    email: String!
    token: String!
    username: String!
    createdAt: String!
}

input RegisterInput{
    username: String!
    password: String!
    confirmPassword: String!
    email: String!
}

type Query{
    listMessage: [Message]!
    listGallery(propertyType: String, designStyle: String, noOfBedrooms: Int, designerID:Int): [Gallery]!
    listReview: [Review]
    listDesigner(houseCondition:String,feeLevel:Int,houseType:String,designStyle:String): [Designer]
    selectDesignerByID(id:Int!): Designer
}

type Mutation {
    addMessage(newMessage: InputMessage): Message
    addReview(newReview: InputReview): Review
    addGallery(newGallery: InputGallery): Gallery
    register(registerInput: RegisterInput): User!
    login(username: String!, password: String!): User!
    addDesigner(newDesigner: InputDesigner): Designer
}